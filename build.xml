<!-- Build file for our first application -->
<project name="Selena" default="test-with-selenium">

    <!-- If the file was not imported, set the selena dir to the directory
        containing this build file. (When imported, ${ant.file} is the importer
        file. The importer should be responsible for defining Selena dir -->
    <dirname file="${ant.file}" property="antfile.dir"/>
    <condition property="selena.dir" value="${antfile.dir}">
        <not>
            <isset property="${selena.dir}"/>
        </not>
    </condition>

    <!-- Setting default properties. ${basedir} will be the implementor porject's
        basedir. When not imported, it will be the Selena's base dir. -->
    <property name="testngXml"              value="testng.xml"/>
    <property name="output.dir"             value="${basedir}/output"/>
    <property name="config.dir"             value="${basedir}/config"/>
    <property name="uixmls.dir"             value="${config.dir}/uixmls"/>
    <property name="src.dir"                value="${basedir}/src" />
    <property name="lib.dir"                value="${selena.dir}/lib"/>
    <property name="bin.dir"                value="${output.dir}/bin"/>
    <property name="jar.dir"                value="${output.dir}/jar"/>
    <property name="report.dir"             value="${output.dir}/reports"/>
    <property name="firefoxProfileTemplate" value="${config.dir}/profile"/>

    <target name="clean" description="Remove all generated content">
        <delete dir="${output.dir}"/>
    </target>


    <target name="reportDir">
        <mkdir dir="${report.dir}" />
    </target>

    <target name="buildDirs">
        <mkdir dir="${output.dir}"/>
        <mkdir dir="${jar.dir}" />
        <mkdir dir="${bin.dir}" />
    </target>

    <target name="prepare" depends="clean, reportDir, buildDirs"
            description="Create all needed dirs">

        <path id="classpath">
            <fileset dir="${jar.dir}" includes="**/*.jar" />
            <fileset dir="${lib.dir}" includes="**/*.jar" />
            <fileset dir="${bin.dir}" includes="**/*.class"/>
        </path>

    </target>


    <target name="checkstyle" depends="reportDir">

        <path id="checkstylePath">
            <fileset dir="${lib.dir}" includes="**/*.jar" />
        </path>

        <taskdef resource="checkstyletask.properties"
        classpath="${lib.dir}/checkstyle-all-5.1.jar"/>

        <checkstyle classpathref="checkstylePath"
        config="${selena.dir}/config/checkstyle_config.xml">
            <fileset dir="${src.dir}" includes="**/*.java"/>
            <formatter type="plain"/>
            <formatter type="xml" toFile="${report.dir}/checkstyle.xml"/>
        </checkstyle>
    </target>


    <target name="buildSelena" depends="prepare"
            description="compile Selena lib">
        <javac srcdir="${selena.dir}/src"
                destdir="${bin.dir}"
                debug="false"
                includes="**/*.java"
                classpathref="classpath"
        />
        <jar destfile="${jar.dir}/Selena.jar" basedir="${bin.dir}" />
    </target>


    <target name="buildTestsuite" depends="prepare, checkstyle, buildSelena"
            description="Compiles the implementor project">
        <javac srcdir="${src.dir}"
                destdir="${bin.dir}"
                debug="false"
                includes="**/*.java"
                classpathref="classpath"
        />
        <jar destfile="${jar.dir}/TestSuite.jar" basedir="${bin.dir}" />
    </target>


    <target name="runtests" depends="prepare, buildTestsuite">
        <taskdef  resource="testngtasks" classpath="${lib.dir}/testng.jar"/>

        <!-- Loading selenium properties -->
        <property file="${config.dir}/seleniumConfig.local.properties" />
        <property file="${config.dir}/seleniumConfig.properties" />

        <testng classpathref="classpath"
		        outputDir="${report.dir}"
		        sourcedir="${src.dir}"
		        haltOnfailure="true"
		        delegateCommandSystemProperties="true"
		        listeners="org.uncommons.reportng.HTMLReporter,org.uncommons.reportng.JUnitXMLReporter">


            <xmlfileset dir="${basedir}" includes="${testngXml}"/>
            <sysproperty key="org.uncommons.reportng.title" value="Report"/>
            <sysproperty key="configfilename"               value="${config.file}"/>
            <sysproperty key="selenium.baseUrl"             value="${selenium.baseUrl}" />
            <sysproperty key="selenium.host"                value="${selenium.host}" />
            <sysproperty key="selenium.port"                value="${selenium.port}" />
            <sysproperty key="selenium.browser"             value="${selenium.browser}" />
            <sysproperty key="uixmls.dir"                   value="${uixmls.dir}" />
        </testng>
    </target>


    <target name="selenium-start">
        <java jar="${selena.dir}/lib/selenium-server-standalone-2.0a5.jar"
		fork="true"
		spawn="true">
            <arg line="-firefoxProfileTemplate ${firefoxProfileTemplate}"/>
        </java>
        <sleep seconds="1"/>
    </target>


    <target name="selenium-stop">
        <get taskname="selenium-shutdown"
		src="http://localhost:4444/selenium-server/driver/?cmd=shutDownSeleniumServer"
		dest="result.txt"/>
    </target>


    <target
        name="test-with-selenium"
        depends="selenium-start, runtests, selenium-stop"
        description="Spawns a selenium server on localhost, runs the tests and stops the server"/>

</project>